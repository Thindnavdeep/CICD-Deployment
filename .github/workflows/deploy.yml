name: CI/CD Build & Deploy (sample-app)

on:
  push:
    branches: [ master ]

env:
  PROJECT_NAME: sample-app
  DEPLOY_BASE: E:\Deployments\Projects

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install & Test
        run: |
          npm ci
          npm test

      - name: Archive artifact
        run: |
          mkdir -p artifact
          cp -r package.json index.js node_modules artifact/ || true
          cd artifact
          zip -r ../artifact.zip .

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          echo -e "Host *\n  StrictHostKeyChecking no\n" > ~/.ssh/config

      - name: Ensure remote temp folder exists
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            powershell -NoProfile -Command "if (!(Test-Path 'C:\temp')) { New-Item -ItemType Directory -Path 'C:\temp' -Force }"

      - name: Copy artifact to server
        uses: appleboy/scp-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          source: "artifact.zip"
          target: "/C:/temp/"

      - name: Remote deploy: unpack, rotate, switch current and restart
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            powershell -NoProfile -ExecutionPolicy Bypass -Command "
              $projRoot = '${{ env.DEPLOY_BASE }}\\${{ env.PROJECT_NAME }}'
              $releasesDir = Join-Path $projRoot 'releases'
              if (!(Test-Path $releasesDir)) { New-Item -ItemType Directory -Path $releasesDir -Force }
              $ts = Get-Date -Format 'yyyyMMddTHHmmssZ'
              $releaseDir = Join-Path $releasesDir $ts
              New-Item -ItemType Directory -Path $releaseDir -Force
              Expand-Archive -Force -Path 'C:\temp\artifact.zip' -DestinationPath $releaseDir
              $current = Join-Path $projRoot 'current'
              if (Test-Path $current) { Remove-Item $current -Recurse -Force }
              Move-Item -Path $releaseDir -Destination $current
              $shared = Join-Path $projRoot 'shared'
              if (!(Test-Path $shared)) {
                New-Item -ItemType Directory -Path $shared -Force
                New-Item -ItemType Directory -Path (Join-Path $shared 'logs') -Force
              }
              & powershell -NoProfile -ExecutionPolicy Bypass -File (Join-Path '${{ env.DEPLOY_BASE }}' 'deploy-scripts\restart-project.ps1') -ProjectName '${{ env.PROJECT_NAME }}'
              Write-Host 'Deployment finished.'
            "
